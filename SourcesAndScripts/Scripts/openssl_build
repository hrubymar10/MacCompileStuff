#!/usr/bin/env bash
#
# openssl_build
# Martin HrubÃ½ (hrubymar10), 2018-2024
#

set -e

OPENSSL_VERSION="1.1.1w"
SHA256="cf3098950cb4d853ad95c0841f1f9c6d3dc102dccfcacd521d93925208b76ac8"

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname ${0}` && pwd)
if [ -z "${MY_PATH}" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  echo 'Error: Script path is for some reason not accessible' >&2
  exit 1  # fail
fi

source "${MY_PATH}/env"
source "${MY_PATH}/functions"

check_wget
check_pkg_config

cd "${SOURCES_PATH}"
rm -rf openssl*
get_src_and_verify_checksum "openssl-${OPENSSL_VERSION}.tar.gz" "${SHA256}" "https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz"
tar xf "${SOURCES_PATH}/archives/openssl-${OPENSSL_VERSION}.tar.gz" -C .
cp -R "openssl-${OPENSSL_VERSION}" "openssl-${OPENSSL_VERSION}-arm64"
mv "openssl-${OPENSSL_VERSION}" "openssl-${OPENSSL_VERSION}-x86_64"
ln -s "openssl-${OPENSSL_VERSION}-x86_64" "openssl"

# Build x86_64
cd "${SOURCES_PATH}/openssl-${OPENSSL_VERSION}-x86_64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_X86_64}"
export CFLAGS="${CFLAGS_X86_64}"
export CXXFLAGS="${CXXFLAGS_X86_64}"
perl ./Configure no-ssl3 no-ssl3-method no-zlib darwin64-x86_64-cc enable-ec_nistp_64_gcc_128
make

# Build arm64
cd "${SOURCES_PATH}/openssl-${OPENSSL_VERSION}-arm64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_ARM64}"
export CFLAGS="${CFLAGS_ARM64}"
export CXXFLAGS="${CXXFLAGS_ARM64}"
perl ./Configure no-ssl3 no-ssl3-method no-zlib darwin64-arm64-cc enable-ec_nistp_64_gcc_128
make

mkdir "openssl-${OPENSSL_VERSION}-RELEASE"
cd "openssl-${OPENSSL_VERSION}-RELEASE"
lipo -create "${SOURCES_PATH}/openssl-${OPENSSL_VERSION}-arm64/libcrypto.1.1.dylib" "${SOURCES_PATH}/openssl-${OPENSSL_VERSION}-x86_64/libcrypto.1.1.dylib" -output "libcrypto.1.1.dylib"
lipo -create "${SOURCES_PATH}/openssl-${OPENSSL_VERSION}-arm64/libssl.1.1.dylib" "${SOURCES_PATH}/openssl-${OPENSSL_VERSION}-x86_64/libssl.1.1.dylib" -output "libssl.1.1.dylib"
for filename in * ; do
  install_name_tool -id "@rpath/${filename}" "${filename}"
  install_name_tool -change "/usr/local/lib/libcrypto.1.1.dylib" "@loader_path/libcrypto.1.1.dylib" "${filename}"
done
rm -rf "${LIBS_PATH}/libcrypto.1.1.dylib" "${LIBS_PATH}/libcrypto.dylib"
rm -rf "${LIBS_PATH}/libssl.1.1.dylib" "${LIBS_PATH}/libssl.dylib"
cp -rf "libcrypto.1.1.dylib" "${LIBS_PATH}/libcrypto.1.1.dylib"
cp -rf "libssl.1.1.dylib" "${LIBS_PATH}/libssl.1.1.dylib"
ln -s "libcrypto.1.1.dylib" "${LIBS_PATH}/libcrypto.dylib"
ln -s "libssl.1.1.dylib" "${LIBS_PATH}/libssl.dylib"
rm -rf "${HEADERS_PATH}/openssl"
mkdir -p "${HEADERS_PATH}/openssl"
cp -rf "${SOURCES_PATH}/openssl/include/openssl/"*".h" "${HEADERS_PATH}/openssl/"
mv "${HEADERS_PATH}/openssl/opensslconf.h" "${HEADERS_PATH}/openssl/opensslconf_x86_64.h"
cp "${SOURCES_PATH}/openssl-${OPENSSL_VERSION}-arm64/include/openssl/opensslconf.h" "${HEADERS_PATH}/openssl/opensslconf_arm64.h"
printf "#ifdef __x86_64__\n#include \"opensslconf_x86_64.h\"\n#else\n#include \"opensslconf_arm64.h\"\n#endif\n" > "${HEADERS_PATH}/openssl/opensslconf.h"
generate_pkgconfig_file "openssl" "${OPENSSL_VERSION}"
generate_pkgconfig_file "libcrypto" "${OPENSSL_VERSION}"
generate_pkgconfig_file "libssl" "${OPENSSL_VERSION}"
echo "==> DONE ..."
echo ""
time_interval_to_string "${starttimestamp}" "$(date +%s)"
echo ""
