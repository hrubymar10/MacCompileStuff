#!/usr/bin/env bash
#
# pixman_build
# Martin HrubÃ½ (hrubymar10), 2018-2024
#

set -e

PIXMAN_VERSION="0.44.2"
SHA256="6349061ce1a338ab6952b92194d1b0377472244208d47ff25bef86fc71973466"

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname ${0}` && pwd)
if [ -z "${MY_PATH}" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  echo 'Error: Script path is for some reason not accessible' >&2
  exit 1  # fail
fi

source "${MY_PATH}/env"
source "${MY_PATH}/functions"

check_wget
check_meson
check_ninja
check_pkg_config

if ! is_apple_silicon_mac; then
  echo "Error: Pixman requires Apple Silicon mac to build universal libs" >&2
  exit 1
fi

cd "${SOURCES_PATH}"
rm -rf "pixman"*
get_src_and_verify_checksum "pixman-${PIXMAN_VERSION}.tar.gz" "${SHA256}" "https://cairographics.org/releases/pixman-${PIXMAN_VERSION}.tar.gz"
tar xf "${SOURCES_PATH}/archives/pixman-${PIXMAN_VERSION}.tar.gz" -C .
cp -R "pixman-${PIXMAN_VERSION}" "pixman-${PIXMAN_VERSION}-arm64"
mv "pixman-${PIXMAN_VERSION}" "pixman-${PIXMAN_VERSION}-x86_64"
ln -s "pixman-${PIXMAN_VERSION}-x86_64" "pixman"

# Build x86_64
cd "${SOURCES_PATH}/pixman-${PIXMAN_VERSION}-x86_64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_X86_64}"
export CFLAGS="${CFLAGS_X86_64}"
export CXXFLAGS="${CXXFLAGS_X86_64}"
mkdir -p "build/pixman"
arch -x86_64 /opt/homebrew_x86_64/bin/meson setup -Ddemos=disabled -Dtests=disabled -Dgtk=disabled -Dgnuplot=false --wrap-mode=nofallback --default-library=shared --buildtype=release . "build"
cd "build"
arch -x86_64 /opt/homebrew_x86_64/bin/ninja

# Build arm64
cd "${SOURCES_PATH}/pixman-${PIXMAN_VERSION}-arm64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_ARM64}"
export CFLAGS="${CFLAGS_ARM64}"
export CXXFLAGS="${CXXFLAGS_ARM64}"
mkdir -p "build/pixman"
arch -arm64 /opt/homebrew/bin/meson setup -Ddemos=disabled -Dtests=disabled -Dgtk=disabled -Dgnuplot=false --wrap-mode=nofallback --default-library=shared --buildtype=release . "build"
cd "build"
arch -arm64 /opt/homebrew/bin/ninja

rm -rf "${LIBS_PATH}/libpixman-1.0.dylib" "${LIBS_PATH}/libpixman-1.dylib" "${LIBS_PATH}/libpixman.dylib"
lipo -create "${SOURCES_PATH}/pixman-${PIXMAN_VERSION}-arm64/build/pixman/libpixman-1.0.dylib" "${SOURCES_PATH}/pixman-${PIXMAN_VERSION}-x86_64/build/pixman/libpixman-1.0.dylib" -output "${LIBS_PATH}/libpixman-1.0.dylib"
install_name_tool -id "@rpath/libpixman-1.0.dylib" "${LIBS_PATH}/libpixman-1.0.dylib"
ln -s "libpixman-1.0.dylib" "${LIBS_PATH}/libpixman-1.dylib"
ln -s "libpixman-1.0.dylib" "${LIBS_PATH}/libpixman.dylib"
rm -rf "${HEADERS_PATH}/pixman"
mkdir -p "${HEADERS_PATH}/pixman"
cp "${SOURCES_PATH}/pixman/pixman/pixman.h" "${SOURCES_PATH}/pixman/build/pixman/pixman-version.h" "${HEADERS_PATH}/pixman/"
generate_pkgconfig_file "pixman-1" "${PIXMAN_VERSION}"
echo "==> DONE ..."
echo ""
time_interval_to_string "${starttimestamp}" "$(date +%s)"
echo ""
