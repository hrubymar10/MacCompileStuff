#!/usr/bin/env bash
#
# libffi_build
# Martin HrubÃ½ (hrubymar10), 2018-2024
#

set -e

LIBFFI_VERSION="3.4.6"
SHA256="b0dea9df23c863a7a50e825440f3ebffabd65df1497108e5d437747843895a4e"

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname ${0}` && pwd)
if [ -z "${MY_PATH}" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  echo 'Error: Script path is for some reason not accessible' >&2
  exit 1  # fail
fi

source "${MY_PATH}/env"
source "${MY_PATH}/functions"

check_wget
check_pkg_config

cd "${SOURCES_PATH}"
rm -rf "libffi"*
get_src_and_verify_checksum "libffi-${LIBFFI_VERSION}.tar.gz" "${SHA256}" "https://github.com/libffi/libffi/releases/download/v${LIBFFI_VERSION}/libffi-${LIBFFI_VERSION}.tar.gz"
tar xf "${SOURCES_PATH}/archives/libffi-${LIBFFI_VERSION}.tar.gz" -C .
cp -R "libffi-${LIBFFI_VERSION}" "libffi-${LIBFFI_VERSION}-arm64"
mv "libffi-${LIBFFI_VERSION}" "libffi-${LIBFFI_VERSION}-x86_64"
ln -s "libffi-${LIBFFI_VERSION}-x86_64" "libffi"
ln -s "libffi-${LIBFFI_VERSION}-x86_64" "libffi-x86_64"
ln -s "libffi-${LIBFFI_VERSION}-arm64" "libffi-arm64"

# Build x86_64
cd "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-x86_64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_X86_64}"
export CFLAGS="${CFLAGS_X86_64}"
export CXXFLAGS="${CXXFLAGS_X86_64}"
./configure --disable-dependency-tracking --enable-shared --host=x86_64-apple-darwin
make

# Build arm64
cd "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-arm64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_ARM64}"
export CFLAGS="${CFLAGS_ARM64}"
export CXXFLAGS="${CXXFLAGS_ARM64}"
./configure --disable-dependency-tracking --enable-shared --host=aarch64-apple-darwin
make

mkdir "libffi-${LIBFFI_VERSION}-RELEASE"
cd "libffi-${LIBFFI_VERSION}-RELEASE"
lipo -create "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-arm64/aarch64-apple-darwin/.libs/libffi.8.dylib" "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-x86_64/x86_64-apple-darwin/.libs/libffi.8.dylib" -output "libffi.8.dylib"
install_name_tool -id "@rpath/libffi.8.dylib" "libffi.8.dylib"
rm -rf "${LIBS_PATH}/libffi.8.dylib" "${LIBS_PATH}/libffi.7.dylib" "${LIBS_PATH}/libffi.dylib"
cp -rf "libffi.8.dylib" "${LIBS_PATH}/libffi.8.dylib"
ln -s "libffi.8.dylib" "${LIBS_PATH}/libffi.7.dylib"
ln -s "libffi.8.dylib" "${LIBS_PATH}/libffi.dylib"
rm -rf "${HEADERS_PATH}/libffi"
mkdir -p "${HEADERS_PATH}/libffi"
cp "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-arm64/aarch64-apple-darwin/include/ffi.h" "${HEADERS_PATH}/libffi/ffi_arm64.h"
cp "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-arm64/aarch64-apple-darwin/include/ffitarget.h" "${HEADERS_PATH}/libffi/ffitarget_arm64.h"
cp "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-x86_64/x86_64-apple-darwin/include/ffi.h" "${HEADERS_PATH}/libffi/ffi_x86_64.h"
cp "${SOURCES_PATH}/libffi-${LIBFFI_VERSION}-x86_64/x86_64-apple-darwin/include/ffitarget.h" "${HEADERS_PATH}/libffi/ffitarget_x86_64.h"
printf "#ifdef __x86_64__\n#include \"ffi_x86_64.h\"\n#else\n#include \"ffi_arm64.h\"\n#endif\n" > "${HEADERS_PATH}/libffi/ffi.h"
printf "#ifdef __x86_64__\n#include \"ffitarget_x86_64.h\"\n#else\n#include \"ffitarget_arm64.h\"\n#endif\n" > "${HEADERS_PATH}/libffi/ffitarget.h"
generate_pkgconfig_file "libffi" "${LIBFFI_VERSION}"
echo "==> DONE ..."
echo ""
time_interval_to_string "${starttimestamp}" "$(date +%s)"
echo ""
