#!/usr/bin/env bash
#
# env
# Martin HrubÃ½ (hrubymar10), 2020-2024
#

set -e

if [ -z ${MY_PATH+x} ]; then
  echo "Error: MY_PATH isn't set. 'env' script isn't meant to be run directly." >&2
  exit 1
fi

cd "${MY_PATH}/../../"
export ROOT_PATH="$(pwd)"
cd "${OLDPWD}"

if ! [ -d "${ROOT_PATH}/.git" ]; then
  echo "Error: ROOT_PATH '${ROOT_PATH}' doesn't contain .git directory." >&2
  exit 1
fi

export PATH=/opt/homebrew/sbin:/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/Apple/usr/bin

export HEADERS_PATH="${ROOT_PATH}/Headers"
export LIBS_PATH="${ROOT_PATH}/lib"
export SCRIPTS_PATH="${ROOT_PATH}/SourcesAndScripts/Scripts"
export SOURCES_PATH="${ROOT_PATH}/SourcesAndScripts/Sources"

export CC="clang"
export CXX="clang++"

export FONTCONFIG_CFLAGS="-I${SOURCES_PATH}/fontconfig"
export FONTCONFIG_LIBS="-L${LIBS_PATH} -lfontconfig"
export FREETYPE_CFLAGS="-I${SOURCES_PATH}/freetype/include"
export FREETYPE_LIBS="-L${LIBS_PATH} -lfreetype"
export FT2_CFLAGS="-I${SOURCES_PATH}/freetype/include"
export FT2_LIBS="-L${LIBS_PATH} -lfreetype"
export glib_CFLAGS="-I${HEADERS_PATH} -I${HEADERS_PATH}/glib-2.0"
export glib_LIBS="-L${LIBS_PATH} -lglib-2.0"
export GOBJECT_CFLAGS="-I${HEADERS_PATH}/glib-2.0"
export GOBJECT_LIBS="-L${LIBS_PATH} -lgobject-2.0"
export HARFBUZZ_CFLAGS="-I${SOURCES_PATH}/harfbuzz/src"
export HARFBUZZ_LIBS="-L${LIBS_PATH} -lharfbuzz"
export LIBFFI_CFLAGS="-I${HEADERS_PATH}/libffi"
export LIBFFI_LIBS="-L${LIBS_PATH} -lffi"
export LIBPNG_CFLAGS="-I${SOURCES_PATH}/libpng"
export LIBPNG_LIBS="-L${LIBS_PATH} -lpng"
export LIBWEBP_CFLAGS="-I${HEADERS_PATH}"
export LIBWEBP_LIBS="-L${LIBS_PATH} -lwebp"
export LIBWEBPDEMUX_CFLAGS="-I${HEADERS_PATH}"
export LIBWEBPDEMUX_LIBS="-L${LIBS_PATH} -lwebpdemux"
export pixman_CFLAGS="-I${HEADERS_PATH}/pixman"
export pixman_LIBS="-L${LIBS_PATH} -lpixman"
export png_REQUIRES="libpng"
export png_CFLAGS="-I${SOURCES_PATH}/libpng"
export png_LIBS="-L${LIBS_PATH} -lpng"
export PNG_CFLAGS="-I${SOURCES_PATH}/libpng"
export PNG_LIBS="-L${LIBS_PATH} -lpng"
export OGG_CFLAGS="-I${SOURCES_PATH}/libogg/include"
export OGG_LIBS="-L${LIBS_PATH} -logg"
export PCRE_CFLAGS="-I${SOURCES_PATH}/pcre"
export PCRE_LIBS="-L${LIBS_PATH} -lpcre"
export SDL_CFLAGS="-I${HEADERS_PATH}/SDL2"
export SDL_LIBS="-L${LIBS_PATH} -lSDL2"

export LIBRARY_PATH="${LIBS_PATH}"
export LD_LIBRARY_PATH="${LIBS_PATH}"

export PKG_CONFIG_PATH="${SCRIPTS_PATH}/pkgconfig"

export SDKPATH="$(xcodebuild -sdk macosx -version Path)"
export MACOSX_DEPLOYMENT_TARGET='10.12'
export MIN_SUPPORTED_MACOSX_DEPLOYMENT_TARGET='10.12'
export LDFLAGS="-isysroot ${SDKPATH} -mmacosx-version-min=10.12 -L${LIBS_PATH}"
export CFLAGS="-isysroot ${SDKPATH} -mmacosx-version-min=10.12 -I${HEADERS_PATH}"
export CXXFLAGS="-isysroot ${SDKPATH} -mmacosx-version-min=10.12 -I${HEADERS_PATH}"

export LDFLAGS_X86_64="-arch x86_64 --target=x86_64-apple-macos10.12 ${LDFLAGS}"
export CFLAGS_X86_64="-arch x86_64 --target=x86_64-apple-macos10.12 ${CFLAGS}"
export CXXFLAGS_X86_64="-arch x86_64 --target=x86_64-apple-macos10.12 ${CXXFLAGS}"
export LDFLAGS_ARM64="-arch arm64 --target=arm64-apple-macos10.12 ${LDFLAGS}"
export CFLAGS_ARM64="-arch arm64 --target=arm64-apple-macos10.12 ${CFLAGS}"
export CXXFLAGS_ARM64="-arch arm64 --target=arm64-apple-macos10.12 ${CXXFLAGS}"
