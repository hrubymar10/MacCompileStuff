#!/usr/bin/env bash
#
# harfbuzz_build
# Martin HrubÃ½ (hrubymar10), 2018-2023
#

set -e

HARFBUZZ_VERSION="8.3.0"
SHA256="109501eaeb8bde3eadb25fab4164e993fbace29c3d775bcaa1c1e58e2f15f847"

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname ${0}` && pwd)
if [ -z "${MY_PATH}" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  echo 'Error: Script path is for some reason not accessible' >&2
  exit 1  # fail
fi

source "${MY_PATH}/env"
source "${MY_PATH}/functions"
unset MACOSX_DEPLOYMENT_TARGET

check_wget
check_meson
check_ninja
check_libffi
check_glib
check_gettext
check_freetype
check_graphite2

if ! is_apple_silicon_mac; then
  echo "Error: Harfbuzz requires Apple Silicon mac to build universal libs" >&2
  exit 1
fi

cd "${SOURCES_PATH}"
rm -rf "harfbuzz"*
get_src_and_verify_checksum "harfbuzz-${HARFBUZZ_VERSION}.tar.xz" "${SHA256}" "https://github.com/harfbuzz/harfbuzz/releases/download/${HARFBUZZ_VERSION}/harfbuzz-${HARFBUZZ_VERSION}.tar.xz"
tar xf "${SOURCES_PATH}/archives/harfbuzz-${HARFBUZZ_VERSION}.tar.xz" -C .
cp -R "harfbuzz-${HARFBUZZ_VERSION}" "harfbuzz-${HARFBUZZ_VERSION}-arm64"
mv "harfbuzz-${HARFBUZZ_VERSION}" "harfbuzz-${HARFBUZZ_VERSION}-x86_64"
ln -s "harfbuzz-${HARFBUZZ_VERSION}-x86_64" "harfbuzz"

# Build x86_64
cd "${SOURCES_PATH}/harfbuzz-${HARFBUZZ_VERSION}-x86_64"
source "${MY_PATH}/env"
unset MACOSX_DEPLOYMENT_TARGET
export LDFLAGS="${LDFLAGS_X86_64}"
export CFLAGS="${CFLAGS_X86_64}"
export CXXFLAGS="${CXXFLAGS_X86_64}"
mkdir "build"
arch -x86_64 zsh -c 'meson -Dgraphite=enabled -Dcoretext=enabled -Dintrospection=disabled --buildtype=release --default-library=shared --wrap-mode=nofallback . build'
cd "build"
arch -x86_64 zsh -c ninja

# Build arm64
cd "${SOURCES_PATH}/harfbuzz-${HARFBUZZ_VERSION}-arm64"
source "${MY_PATH}/env"
unset MACOSX_DEPLOYMENT_TARGET
export LDFLAGS="${LDFLAGS_ARM64}"
export CFLAGS="${CFLAGS_ARM64}"
export CXXFLAGS="${CXXFLAGS_ARM64}"
mkdir "build"
arch -arm64 /opt/homebrew/bin/meson -Dgraphite=enabled -Dcoretext=enabled -Dintrospection=disabled --buildtype=release --default-library=shared --wrap-mode=nofallback . "build"
cd "build"
arch -arm64 /opt/homebrew/bin/ninja

mkdir "harfbuzz-${HARFBUZZ_VERSION}-RELEASE"
cd "harfbuzz-${HARFBUZZ_VERSION}-RELEASE"
lipo -create "${SOURCES_PATH}/harfbuzz-${HARFBUZZ_VERSION}-arm64/build/src/libharfbuzz.0.dylib" "${SOURCES_PATH}/harfbuzz-${HARFBUZZ_VERSION}-x86_64/build/src/libharfbuzz.0.dylib" -output "libharfbuzz.0.dylib"
install_name_tool -id "@rpath/libharfbuzz.0.dylib" "libharfbuzz.0.dylib"
remove_rpath_if_exists "libharfbuzz.0.dylib" "${LIBS_PATH}"
rm -rf "${LIBS_PATH}/libharfbuzz.0.dylib" "${LIBS_PATH}/libharfbuzz.dylib"
cp -rf "libharfbuzz.0.dylib" "${LIBS_PATH}/libharfbuzz.0.dylib"
ln -s "libharfbuzz.0.dylib" "${LIBS_PATH}/libharfbuzz.dylib"
rm -rf "${HEADERS_PATH}/harfbuzz"
mkdir "${HEADERS_PATH}/harfbuzz"
cp "${SOURCES_PATH}/harfbuzz/src/"*".h" "${HEADERS_PATH}/harfbuzz/"
generate_pkgconfig_file "harfbuzz" "${HARFBUZZ_VERSION}"
echo "==> DONE ..."
echo ""
time_interval_to_string "${starttimestamp}" "$(date +%s)"
echo ""
